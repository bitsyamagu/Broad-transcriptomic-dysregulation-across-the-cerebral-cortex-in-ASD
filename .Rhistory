install.packages("limma")
source("https://bioconductor.org/biocLite.R")
biocLite("limma")
library(limma)
?makeContrasts
?topTable
?quantile
mat = rbind(c(1,2,3),c(6,3,5),c(9,3,10))
mat
mat = rbind(c(1,2,3),c(9,3,5),c(6,3,10))
mat = rbind(c(1,12,3),c(9,3,15),c(6,3,10))
mat
sort(mat[,1])
order(mat[,1])
mat[order(mat[,1]),]
mat
?cor.test
mat = rbind(c(0,1,1,2),c(3,5,8,13),c(0,2,2,4),c(6,10,16,26))
mat
mat2 = log2(mat+1)
mat2
?lm
t.test()
v1 = rnorm(10)
v2 = rnorm(10)
t.test(v1,v2)
v = cbind(v1,v2)
lm(v~c(rep(0,10),rep(1,10)))
c(rep(0,10),rep(1,10))
lm(v~c(0,1))
lm(v[1,]~c(0,1))
obj = apply(lm(v~c(0,1)))
obj = apply(v,1,lm(~c(0,1)))
obj = apply(v,1,lm(y~c(0,1)))
v
obj = apply(v,1,function(y) lm(y~c(0,1)))
summary(obj)
obj[[1]]
summary(obj[[1]])
t.test(v1,v2)
lm(c(v1,v2)~c(rep(0,10),rep(1,10)))
summary(lm(c(v1,v2)~c(rep(0,10),rep(1,10))))
t.test(v1,v2)
load("C:/Users/jillh/Dropbox/NovitchLab/organoidRNAseq/DGE/A-C_consensus_DGE.RData")
View(up_genes)
load("C:/Users/jillh/Dropbox/NovitchLab/organoidRNAseq/DGE/limma_diffGenes.RData")
sig_list[[1]]
library(WGCNA)
test=cor(c(1,2,3,4),c(5,6,7,8))
?cor
test=bicor(c(1,2,3,4),c(5,6,7,8))
?bicor
cor.test(c(1,2,3,4),c(5,6,7,8))
cor.test(c(1,2,3,4),c(5,6,7,8),method="spearman")
cor.test(c(1,2,3,4),c(5,6,7,8),method="bicor")
cor.test(c(1,2,3,4),c(5,6,7,8),method="spearman")
plot(c(1,2,3,4),c(5,6,7,8))
cor.test(c(1,2,3,4,5),c(5,6,7,8,9),method="spearman")
lm(c(1,2,3,4) ~ c(4,5,6,7))
summary(lm(c(1,2,3,4) ~ c(4,5,6,7)))
?cbind
?head
?qt
y=c(35,34,38,35,37)
n=length(y)
se = sd(y)/sqrt(n)
int.50 = mean(y) + qt(c(0.25,0.75),n-1)*se
qt(c(0.25,0.75),n-1)
library(fmsb)
?NagelkerkeR2
library(WGCNA)
source("http://bioconductor.org/biocLite.R")
biocLite("WGCNA")
library(WGCNA)
biocLite("scales")
library(WGCNA)
biocLite("tibble")
library(WGCNA)
biocLite("checkmate")
library(WGCNA)
biocLite("htmltools")
library(WGCNA)
biocLite("knitr")
library(WGCNA)
library(lumi)
biocLite("XML")
library(WGCNA)
library(lumi)
biocLite("reshape")
library(lumi)
biocLite("mclust")
library(lumi)
biocLite("openssl")
library(lumi)
biocLite("mixOmics")
biocLite("mixOmics")
biocLite("shiny")
biocLite("httpuv")
biocLite("shiny")
biocLite("httpuv")
?biocLite
install.packages("https://cran.rstudio.com/bin/windows/contrib/3.2/httpuv_1.3.5.zip")
install.packages("lumi")
biocLite("lumi")
library(lumi)
biocLite("mixOmics")
biocLite("httpuv")
install.packages(c("Rcpp", "httpuv", "shiny"))
üëç 5 üëé 1
install.packages(c("Rcpp", "httpuv", "shiny"))
biocLite("Rcpp")
rm(list=ls()); options(stringsAsFactors=F)
source("http://bioconductor.org/biocLite.R")
library(WGCNA)
biocLite("Rcpp")
biocLite("lumi")
library(WGCNA)
library("lumi")
biocLite("httpuv")
biocLite("mixOmics")
biocLite("shiny")
library(installr)
biocLite("installR")
biocLite("installr")
library(installr)
updateR()
11+10+9+8+7+6+5+4+3+2+1
1-((1/7)*(2/7)*(3/7)*(4/7)*(5/7)*(6/7))
1-((2/7)*(3/7)*(4/7)*(5/7)*(6/7))
1-((1/7)*(2/7)*(3/7)*(4/7)*(5/7))
((1/7)*(2/7)*(3/7)*(4/7)*(5/7)*(6/7))
sqrt(0.33)
1-sqrt(0.33)
(1-sqrt(0.33))^2
1-0.181-0.33
0.25^2
0.25*0.25
1-(0.25^3)-(0.5*(0.25^2))-((0.5^2)*0.25)-(0.5^3)
sqrt(0.25)
0.5^2
0.33-(0.25)-0.5
0.77-0.25
0.52/.25
0.5/.25
2.08*0.25
0.25/0.77
0.25/0.766
((0.25)^3)+((0.25^2)*0.5)+((0.25^2)*0.25)+(0.25*0.5*0.25)+(0.25*(0.25^2))+(0.25*(0.5^2))
1-0.766
1-(0.75^3)
0.25/0.578
(0.25*(0.75^2))+((0.25^2)*0.75)+(0.25^3)
(0.75^3)
0.75^2
(0.25*0.75*0.75)
(0.25*0.25*0.75)
(0.25*0.25*0.25)
(0.75*0.75*0.75)
0.42+0.02+0.05+0.14
(0.75^3)
(0.25^3)
(0.25*(0.75^2))
(0.25*(0.75^2))*3
(0.75*(0.25^2))*3
0.42+0.02+0.42+0.14
1-(0.75^3)
0.25/0.58
(0.75^3)
library(DESe12)
library(DESeq2)
sessionInfo
sessionInfo()
gse <- getGEO("GSE20295", GSEMatrix =TRUE,getGPL=FALSE)
gse <- getGEO("GSE20295", GSEMatrix =TRUE,getGPL=FALSE)
options(stringsAsFactors = FALSE)
library(affy) ### Load your library every time
library(GEOquery)
library(limma)
library(WGCNA)
library(sva)
library(biomaRt)
library(Biobase)
setwd("C:/Users/Jill/Dropbox/DHGLab/Tutorials/Microarray/")
vector <- c(0,1,1,2,3,4,)
vector <- c(0,1,1,2,3,4)
vector
vector2 <- c(2,3,4,5,6,7)
plot(vector,vector2)
matrix <-cbind(vector,vector2)
View(matrix)
matrix
matrix[,1]
matrix[2,1]
matrix [4,2]
?NagelkerkeR2
??NagelkerkeR2
library(limma)
?voom
?lmFit
vec1=c(1,2,3,4,5)
vec2=c(5,3,6,7,8)
anova(lm(vec1~vec2))
vec3=c(6,7,8,3,4)
cond=cbind(vec2,vec1)
anova(lm(vec3~cond))
?prcomp
test1=c(1,2,3,7,8,9)
test2=c(1,2,3,7,8,9)
test_mat=cbind(test1,test2)
obj=prcomp(test_mat)
obj=prcomp(t(test_mat))
plot(test1,test2)
plot(test1,obj$rotation[,1])
test_mat
obj
test2=c(11,12,13,17,18,19)
test_mat=cbind(test1,test2)
obj=prcomp(test_mat)
obj=prcomp(t(test_mat))
plot(test1,obj$rotation[,1])
obj
?prcomp
plot(test1,test2)
plot(obj$rotation[,1],obj$rotation[,2])
obj=prcomp(test_mat)
obj
obj=prcomp(t(test_mat))
obj
plot(obj)
obj=prcomp(t(test_mat),center = FALSE)
obj
plot(obj$rotation[,1],obj$rotation[,2])
test1=c(1,2,3,7,8,9)
test2=test1+2
mat=rbind(test1,test2)
pc=prcomp(mat)
pc$rotation
pc2=prcomp(t(mat))
pc2$
pc=prcomp(mat,center=FALSE)
pc2=prcomp(t(mat),center=FALSE)
pc$rotation
pc2$rotation
plot(pc$rotation[,1],pc$rotation[,2])
mat
test2=c(9,10,11,5,4,3)
mat=rbind(test1,test2)
plot(test1,test2)
pc=prcomp(mat,center=FALSE)
pc$rotation
?mean
useMethod("mean")
UseMethod("mean")
getAnywhere("mean")
getAnywhere('mean')
methods("mean")
getAnywhere('mean.default')
x=c(1,2,2,3,5,6,5)
mean(x)
sum(x[1:7]/7)
sum(x[1:7]/6)
library(gProfileR)
?gProfileR
?gprofiler
library(earth)
?earth
library(limma)
?lmFit
?gls.series
?eBayes
?topTable
t.test(3)
library(cqn)
?cqn
library(clusterProfiler); library(GSEABase); library(biomaRt)
?GSEA
source("https://bioconductor.org/biocLite.R")
library(XML)
biocLite("XML")
data("cortex_mrna")
gene="Necab1"
cellExpDist = data.frame(e=cortex_mrna$exp[gene,],l1=cortex_mrna$annot[colnames(cortex_mrna$exp),]$level1class)
library(EWCE)
biocLite("EWCE")
source("http://bioconductor.org/biocLite.R")
biocLite("EWCE")
R.Version()
install.packages("EWCE")
library(EWCE)
options(stringsAsFactors = F)
source("http://bioconductor.org/biocLite.R")
biocLite("EWCE")
install.packages("EWCE")
tmp = "TEST"
tolower(tmp)
substr(tmp,0,1)
paste(substr(tmp,0,1),tolower(substr(tmp,1,length(tmp))),sep="")
paste(substr(tmp,0,1),tolower(substr(tmp,1,nchar(tmp))),sep="")
paste(substr(tmp,0,1),tolower(substr(tmp,2,nchar(tmp))),sep="")
zhang.datExpr = read.csv("C:/Users/jillh/Dropbox/DHGLab/ArgMouse/proc/zhang_datExpr.cell.avg.csv")
View(zhang.datExpr)
rownames(zhang.datExpr) = zhang.datExpr$X
zhang.datExpr = zhang.datExpr[,-1]
avg = apply(zhang.datExpr,2,mean)
boxplot(avg~colnames(zhang.datExpr))
boxplot(zhang.datExpr)
boxplot(zhang.datExpr,main="Zhang Expression of Cell Types Across Genes")
x=c(0.5,1,1.5,2,2.5)
y=log(x)
plot(y ~ x)
x=c(61,610,1037,2074,3050,4087,5002,6100,7015)
y=c(0.974206,1.16716,1.19879,1.28192,1.30739,1.32019,1.35494,1.36941,1.37505)
plot(y ~ x)
logEstimate = lm(y ~ log(x))
logEstimate
y=c(0,1,2,3,4,5)
x=c(0.1,1.3,1.9,3.2,4.5,4.9)
lm(y~x)
logLik(lm(y~x))
summary(lm(y~x))
test = c(0,1,1,1,2,3,4,4,5,6)
mean(test)
quantile(test)
mean(quantile(test))
mean(quantile(test,n=10))
quantile(test,c(0,0.2,0.4,0.6,0.8,1))
mean(quantile(test,c(0,0.2,0.4,0.6,0.8,1)))
test = rnorm(,n=50)
plot(density(test))
quantile(test)
mean(test)
mean(quantile(test))
mean(quantile(test,c(0,0.2,0.4,0.6,0.8,1)))
mean(quantile(test,c(0,0.33,0.66,1)))
log2(2)
log2(2.5)
log2(3)
2^(-1.5)
log2(0.353)
log2(-0.353)
-2^(1.5)
log2(2)
log2(2.1)
log2(2.2)
log2(2.5)
log2(3)
log2(2.8)
2.8-2
median(test)
test = c(0,0,0,0,0,1,2,2,1,3)
mean(test)
median(test)
quantile(test)
quantile(test,c(0,0.33,0.66,1))
mean(quantile(test))
mean(quantile(test,c(0,0.33,0.66,1)))
sd(test)
sd(test)/mean(test)
test2 = c(test,test)
sd(test)
sd(test2)
mean(test2)
mean(test)
rownames(datMeta_model_perm) = c(1:nrow(datMeta_model_perm))
options(stringsAsFactors = FALSE)
Sys.which("make")
wkdir="C:/Users/jillh/Dropbox/GitHub/"
setwd(paste(wkdir,"Transcriptomic-changes-are-pervasive-across-11-cortical-regions-in-ASD/",sep=""))
library(limma); library(edgeR); library(cqn); library(biomaRt)
library(WGCNA)
rm(list=ls())
wkdir="C:/Users/jillh/Dropbox/GitHub/"
setwd(paste(wkdir,"Transcriptomic-changes-are-pervasive-across-11-cortical-regions-in-ASD/",sep=""))
library(limma); library(edgeR); library(cqn); library(biomaRt)
library(WGCNA)
install.packages("C:/Users/jillh/Dropbox/GandalLab/R_mycode/earth-infGenes",source=NULL,type="source")
install("C:/Users/jillh/Dropbox/GandalLab/R_mycode/earth-infGenes")
library(devtools)
install("C:/Users/jillh/Dropbox/GandalLab/R_mycode/earth-infGenes")
pkgbuild::check_build_tools(debug = TRUE)
install.packages("C:/Users/jillh/Dropbox/GandalLab/R_mycode/earth-infGenes",type="source")
list.files(C:/Users/jillh/Dropbox/GandalLab/R_mycode/)
list.files("C:/Users/jillh/Dropbox/GandalLab/R_mycode/")
install.packages("C:/Users/jillh/Dropbox/GandalLab/R_mycode/earth-infGenes.zip",type="source")
library(devtools)
build_github_devtools()
devtools::install_github("hadley/devtools")
library(devtools)
build_github_devtools()
Sys.which("make")
?install
install("C:/Users/jillh/Dropbox/GandalLab/R_mycode/earth-infGenes")
library(pkgbuild)
check_build_tools(debug=TRUE)
